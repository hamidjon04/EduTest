definitions:
  model.CheckReq:
    properties:
      answers:
        items:
          $ref: '#/definitions/model.QuestionAnswer'
        type: array
      template_id:
        type: string
    type: object
  model.CheckStudentTestReq:
    properties:
      answers:
        items:
          $ref: '#/definitions/model.QuestionAnswer'
        type: array
      day:
        type: string
      student_id:
        type: string
    type: object
  model.CreateQuestionReq:
    properties:
      answer:
        type: string
      answer_image_url:
        type: string
      option_image_url:
        $ref: '#/definitions/model.Option'
      options:
        $ref: '#/definitions/model.Option'
      question_image_url:
        type: string
      question_text:
        type: string
      subject_id:
        type: string
      type:
        type: string
    type: object
  model.CreateStudentReq:
    properties:
      lastname:
        type: string
      name:
        type: string
      phone_number:
        type: string
      subject1:
        type: string
      subject2:
        type: string
    type: object
  model.CreateStudentResp:
    properties:
      student_id:
        type: string
    type: object
  model.CreateSubjectReq:
    properties:
      name:
        type: string
    type: object
  model.CreateTemplateReq:
    properties:
      day:
        type: string
      student_id:
        type: string
    type: object
  model.Error:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  model.GetQuestionsResp:
    properties:
      questions:
        items:
          $ref: '#/definitions/model.Question'
        type: array
    type: object
  model.GetStudentResultResp:
    properties:
      results:
        items:
          $ref: '#/definitions/model.StudentResult'
        type: array
    type: object
  model.GetStudentsResp:
    properties:
      students:
        items:
          $ref: '#/definitions/model.Student'
        type: array
    type: object
  model.GetStudentsResultResp:
    properties:
      count:
        type: integer
      students_results:
        items:
          $ref: '#/definitions/model.StudentReslt'
        type: array
    type: object
  model.GetSubjectsResp:
    properties:
      subjects:
        items:
          $ref: '#/definitions/model.Subject'
        type: array
    type: object
  model.GetTestResp:
    properties:
      question:
        items:
          $ref: '#/definitions/model.Question'
        type: array
      test_id:
        type: string
    type: object
  model.Incorrect:
    properties:
      name:
        type: string
      nomer:
        type: integer
    type: object
  model.LoginReq:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  model.Option:
    properties:
      a:
        type: string
      b:
        type: string
      c:
        type: string
      d:
        type: string
    type: object
  model.Question:
    properties:
      answer:
        type: string
      answer_image_url:
        type: string
      id:
        type: string
      option_image_url:
        $ref: '#/definitions/model.Option'
      options:
        $ref: '#/definitions/model.Option'
      question_image_url:
        type: string
      question_text:
        type: string
      subject_id:
        type: string
      type:
        type: string
    type: object
  model.QuestionAnswer:
    properties:
      answer:
        type: string
      number:
        type: integer
    type: object
  model.QuestionResult:
    properties:
      number:
        type: integer
      status:
        type: boolean
    type: object
  model.QuestionsStatus:
    properties:
      correct:
        type: integer
      incorrect:
        type: integer
      incorrect_questions:
        items:
          $ref: '#/definitions/model.Incorrect'
        type: array
    type: object
  model.RegisterReq:
    properties:
      lastname:
        type: string
      name:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  model.Result:
    properties:
      correct:
        type: integer
      incorrect:
        type: integer
      percent:
        type: number
    type: object
  model.Status:
    properties:
      message:
        type: string
    type: object
  model.Student:
    properties:
      id:
        type: string
      lastname:
        type: string
      name:
        type: string
      phone_number:
        type: string
      student_id:
        type: string
      subject1:
        type: string
      subject2:
        type: string
    type: object
  model.StudentReslt:
    properties:
      ball:
        type: number
      day:
        type: string
      lastname:
        type: string
      name:
        type: string
      result:
        items:
          $ref: '#/definitions/model.QuestionResult'
        type: array
      student_id:
        type: string
      subject1:
        type: string
      subject2:
        type: string
    type: object
  model.StudentResult:
    properties:
      ball:
        type: number
      result:
        items:
          $ref: '#/definitions/model.QuestionResult'
        type: array
      template_id:
        type: string
    type: object
  model.StudentsStatus:
    properties:
      correct:
        type: integer
      incorrect:
        type: integer
      incorrect_students:
        items:
          $ref: '#/definitions/model.Student'
        type: array
    type: object
  model.Subject:
    properties:
      id:
        type: string
      name:
        type: string
    type: object
  model.TestResult:
    properties:
      correct:
        type: integer
      uncorrect:
        type: integer
    type: object
  model.Token:
    properties:
      access_token:
        type: string
    type: object
  model.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
      user_id:
        type: string
    type: object
  model.UpdateQuestionReq:
    properties:
      answer:
        type: string
      answer_image_url:
        type: string
      option)image_url:
        $ref: '#/definitions/model.Option'
      options:
        $ref: '#/definitions/model.Option'
      question_image_url:
        type: string
      question_text:
        type: string
      type:
        type: string
    type: object
  model.UpdateStudentReq:
    properties:
      lastname:
        type: string
      name:
        type: string
      phone_number:
        type: string
      subject1:
        type: string
      subject2:
        type: string
    type: object
info:
  contact: {}
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate user and return access/refresh tokens
      parameters:
      - description: User credentials
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
        "400":
          description: Invalid request format
          schema:
            $ref: '#/definitions/model.Error'
        "404":
          description: User not found or invalid credentials
          schema:
            $ref: '#/definitions/model.Error'
      summary: User login
      tags:
      - Auth
  /questions:
    get:
      description: Berilgan ID yoki fan ID bo‘yicha savollarni olish
      parameters:
      - description: Savol IDsi
        in: query
        name: id
        type: string
      - description: Fan IDsi
        in: query
        name: subject_id
        type: string
      - description: Savol turi
        in: query
        name: type
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetQuestionsResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Savollarni olish
      tags:
      - Questions
  /questions/create:
    post:
      consumes:
      - application/json
      description: Yangi savol qo'shish uchun API
      parameters:
      - description: Savol yaratish ma'lumotlari
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateQuestionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Yangi savol yaratish
      tags:
      - Questions
  /questions/delete/{id}:
    delete:
      description: Berilgan ID bo‘yicha savolni o‘chirish
      parameters:
      - description: Savol IDsi
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Savolni o‘chirish
      tags:
      - Questions
  /questions/image/upload:
    post:
      consumes:
      - multipart/form-data
      description: Rasmni serverga yuklab, Minio'ga saqlaydi va URL qaytaradi
      parameters:
      - description: Yuklanadigan rasm fayli
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Yuklangan rasm URL'si
          schema:
            type: string
        "400":
          description: Faylni yuklab olishda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Faylni yuklash
      tags:
      - Files
  /questions/update/{id}:
    put:
      consumes:
      - application/json
      description: Berilgan ID bo‘yicha savolni yangilash
      parameters:
      - description: Savol IDsi
        in: path
        name: id
        required: true
        type: string
      - description: Savolni yangilash ma'lumotlari
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateQuestionReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Savolni yangilash
      tags:
      - Questions
  /questions/upload:
    post:
      consumes:
      - multipart/form-data
      description: Foydalanuvchi Excel faylini yuklab, uni serverda qayta ishlash
      parameters:
      - description: Excel fayl
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/model.QuestionsStatus'
        "400":
          description: Faylni yuklashda yoki saqlashda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Faylni yuklash va tahlil qilish
      tags:
      - Files
  /refresh-token:
    get:
      consumes:
      - application/json
      description: Get a new access token using refresh token
      parameters:
      - description: User ID
        in: query
        name: user_id
        required: true
        type: string
      - description: Refresh Token
        in: query
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Token'
        "401":
          description: Invalid or expired refresh token
          schema:
            $ref: '#/definitions/model.Error'
      summary: Refresh access token
      tags:
      - Auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user with necessary credentials
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RegisterReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Tokens'
        "400":
          description: 'Bad request: invalid input'
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/model.Error'
      summary: User registration
      tags:
      - Auth
  /students:
    get:
      description: Berilgan ID bo‘yicha talabani yoki barcha talabalarni olish
      parameters:
      - description: Talabaning unikal ID'si (Majburiy emas, agar berilmasa barcha
          talabalar qaytariladi)
        in: query
        name: id
        type: string
      responses:
        "200":
          description: Talabalar ma'lumotlari
          schema:
            $ref: '#/definitions/model.GetStudentsResp'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talabalar ma'lumotlarini olish
      tags:
      - Students
  /students/{student_id}/result:
    get:
      consumes:
      - application/json
      description: Retrieves the result of a student based on student_id and template_id
      parameters:
      - description: Student ID
        in: path
        name: student_id
        required: true
        type: string
      - description: Template ID
        in: query
        name: template_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.GetStudentResultResp'
        "500":
          description: Serverda xatolik
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Get student result
      tags:
      - Students
  /students/create:
    post:
      consumes:
      - application/json
      description: Yangi talabani ro‘yxatga olish
      parameters:
      - description: Talaba ma'lumotlari
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateStudentReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.CreateStudentResp'
        "400":
          description: Noto'g'ri ma'lumot kiritildi
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talaba yaratish
      tags:
      - Students
  /students/delete/{id}:
    delete:
      description: Berilgan ID bo‘yicha talabani o‘chirish
      parameters:
      - description: Talabaning unikal ID'si
        in: path
        name: id
        required: true
        type: string
      responses:
        "200":
          description: Muvaffaqiyatli o‘chirildi
          schema:
            $ref: '#/definitions/model.Status'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talabani o'chirish
      tags:
      - Students
  /students/results:
    get:
      consumes:
      - application/json
      description: Berilgan kun va fanlarga mos keluvchi talabalarning natijalarini
        qaytaradi
      parameters:
      - description: Natija kuni
        in: query
        name: day
        type: string
      - description: Birinchi fan ID si
        in: query
        name: subject1_id
        type: string
      - description: Ikkinchi fan ID si
        in: query
        name: subject2_id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Talabalarning natijalari
          schema:
            $ref: '#/definitions/model.GetStudentsResultResp'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talabalarning natijalarini olish
      tags:
      - Students
  /students/update/{id}:
    put:
      consumes:
      - application/json
      description: Berilgan ID bo‘yicha talabani yangilash
      parameters:
      - description: Talabaning unikal ID'si
        in: path
        name: id
        required: true
        type: string
      - description: Yangilangan talaba ma'lumotlari
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UpdateStudentReq'
      produces:
      - application/json
      responses:
        "200":
          description: Muvaffaqiyatli yangilandi
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Noto'g'ri ma'lumot kiritildi
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talaba ma'lumotlarini yangilash
      tags:
      - Students
  /students/upload:
    post:
      consumes:
      - multipart/form-data
      description: Excel fayl orqali talabalar ma'lumotlarini yuklash
      parameters:
      - description: Excel fayl (XLSX format)
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Talabalar muvaffaqiyatli yuklandi
          schema:
            $ref: '#/definitions/model.StudentsStatus'
        "400":
          description: Fayl yuklashda xatolik
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talabalar ro'yxatini yuklash
      tags:
      - Files
  /subjects/create:
    post:
      consumes:
      - application/json
      description: Yangi fan qo‘shish
      parameters:
      - description: Yangi fan ma'lumotlari
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateSubjectReq'
      produces:
      - application/json
      responses:
        "200":
          description: Muvaffaqiyatli qo‘shildi
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Noto'g'ri ma'lumot kiritildi
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Fan yaratish
      tags:
      - Subjects
  /subjects/get:
    get:
      description: Agar ID berilsa, shu fanni, aks holda barcha fanlarni qaytaradi
      parameters:
      - description: Fan ID'si (Majburiy emas, agar berilmasa barcha fanlar qaytariladi)
        in: query
        name: id
        type: string
      responses:
        "200":
          description: Fanlar ma'lumotlari
          schema:
            $ref: '#/definitions/model.GetSubjectsResp'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Fan(lar) ma'lumotlarini olish
      tags:
      - Subjects
  /subjects/update/{id}:
    put:
      consumes:
      - application/json
      description: Berilgan ID bo‘yicha fanni yangilaydi
      parameters:
      - description: Fan IDsi
        in: path
        name: id
        required: true
        type: string
      - description: Yangi fan nomi
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Status'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Fan nomini yangilash
      tags:
      - Subjects
  /templates/check:
    post:
      consumes:
      - application/json
      description: Ushbu endpoint talabaga tegishli test javoblarini tekshirish uchun
        ishlatiladi
      parameters:
      - description: Talabaning test javoblarini tekshirish uchun ma'lumot
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CheckStudentTestReq'
      produces:
      - application/json
      responses:
        "200":
          description: Test natijalari muvaffaqiyatli tekshirildi
          schema:
            $ref: '#/definitions/model.Result'
        "400":
          description: Noto'g'ri ma'lumot kiritildi
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik yuz berdi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Talabaning test natijalarini tekshirish
      tags:
      - Templates
  /templates/create:
    post:
      consumes:
      - application/json
      description: Yangi test template yaratish
      parameters:
      - description: Template ma'lumotlari
        in: body
        name: template
        required: true
        schema:
          $ref: '#/definitions/model.CreateTemplateReq'
      produces:
      - application/json
      responses:
        "200":
          description: Muvaffaqiyatli yaratildi
          schema:
            $ref: '#/definitions/model.Status'
        "400":
          description: Noto'g'ri ma'lumot kiritildi
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Serverda xatolik
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Template yaratish
      tags:
      - Templates
  /templates/get:
    get:
      consumes:
      - application/json
      description: Student ID va sana bo‘yicha shablonni yuklab olish
      parameters:
      - description: Talaba ID
        in: query
        name: student_id
        required: true
        type: string
      - description: Kun (YYYY-MM-DD format)
        in: query
        name: day
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: Shablon fayli
          schema:
            type: file
        "400":
          description: Xato so‘rov
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Student shablonini yuklab olish
      tags:
      - Templates
  /tests/check:
    post:
      consumes:
      - application/json
      description: Foydalanuvchidan kelgan javoblarni tekshiradi va natijani qaytaradi
      parameters:
      - description: Foydalanuvchining test javoblari
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.CheckReq'
      produces:
      - application/json
      responses:
        "200":
          description: Test natijasi
          schema:
            $ref: '#/definitions/model.TestResult'
        "400":
          description: Noto'g'ri ma'lumot
          schema:
            $ref: '#/definitions/model.Error'
        "500":
          description: Server xatosi
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Test natijasini tekshirish
      tags:
      - test
  /tests/get:
    get:
      consumes:
      - application/json
      description: Berilgan foydalanuvchi va fan uchun test savollarini olish (tasodifiy
        tanlanadi)
      parameters:
      - description: Foydalanuvchi IDsi
        in: query
        name: user_id
        required: true
        type: string
      - description: Fan IDsi
        in: query
        name: subject_id
        required: true
        type: string
      - description: Nechta savol kerakligi (soni)
        in: query
        name: count
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Savollar ro'yxati
          schema:
            $ref: '#/definitions/model.GetTestResp'
        "500":
          description: Server xatosi haqida ma'lumot
          schema:
            $ref: '#/definitions/model.Error'
      security:
      - BearerAuth: []
      summary: Test uchun savollarni olish
      tags:
      - test
securityDefinitions:
  BearerAuth:
    description: 'Tokenni faqat o‘zi yozing, masalan: eyJhbGciOiJIUzI1NiIs..'
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
